library(shiny); runApp('convolution.R')
runApp('convolution.R')
source('C:/Users/tkaunzin/Desktop/github/R/Coherent Capturing Simulation/coherent capture.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
source('C:/Users/tkaunzin/Desktop/github/R/Signal Harmonic Polynomial Visualizer/polynomial.R', echo=TRUE)
library(shiny); runApp('convolution.R')
runApp('convolution.R')
runApp('convolution.R')
# Wave Generation
sample.rate <- 2048
npts <- 512
# Time Axis
dt = 1/npts
t <- 0:(npts - 1) * dt
# Creating the sine waves
freq <- 20 # 5 peaks over 250ms
omega <- 2 * pi * freq
wave.1 <- c(integer(25),integer(3) + 10, integer(9), integer(3) + 10, integer(npts - 40))
#wave.1 <- c(integer(25),integer(3) + 10, integer(44), integer(3) + 10, integer(72), integer (3) + 10, integer(npts - 150))
wave.2 <- c(integer(25),integer(3) + 10, integer(9), integer(3) + 10, integer(75), sin(omega*t[115:(npts - 1)]))
wave.1.trimmed <- rev(wave.1)
wave.1.trimmed * wave.2
runApp('convolution.R')
runApp('convolution.R')
runApp('convolution.R')
runApp('convolution.R')
runApp('convolution.R')
wave.1.trimmed*wave.2
runApp('convolution.R')
library(shiny); runApp('convolution.R')
runApp('convolution.R')
runApp('convolution.R')
runApp('convolution.R')
wave.1 <- c(integer(25),integer(3) + 10, integer(9), integer(3) + 10, integer(297), integer(3) + 5, integer(npts - 340))
lengt(wave.1)
length(wave.1)
runApp('convolution.R')
runApp('convolution.R')
install.packages("aplot")
install.packages("DescTools")
runApp('convolution.R')
